pipeline {
    agent any

    stages {
        stage('Build image(s)') {
            steps {
                sh 'docker compose --env-file test.env build'
            }
        }
        
        stage('Stop and remove old container(s)') {
            steps {
                script {
                    try {
                        sh 'docker compose -p test-frontend --env-file test.env down'
                    } catch (err) {}
                }
                echo 'Stopping and removing...'
            }
        }

        stage('Create and start new container(s)') {
            steps {
                sh 'docker compose -p test-frontend --env-file test.env up -d'
                sh 'docker ps'
            }
        }

        stage('Push image(s) to registry') {
            steps {
                sh 'docker compose --env-file test.env push'
            }
        }

        stage('Deploy to production') {
            steps {
                build job: 'prod-frontend', wait: false, parameters: [
                    string(name: 'TAG', value: env.BUILD_NUMBER)
                ]
            }
        }
    }

    post {
        always {
            echo 'Finished.'
        }
    }
}